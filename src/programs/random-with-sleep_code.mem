  ////////////////  // 000  xorshift_create:
  0111000100100001  // 000      movi r1 0x12
  1100000100000001  // 001      storei [ 0x10 ] r1
  0111001101000001  // 002      movi r1 0x34
  1100000100010001  // 003      storei [ 0x11 ] r1
  ////////////////  // 004  loop:
  0011000010101110  // 004      storer [ ra ] re
  0110011011111010  // 005      add ra rf
  0111001011111110  // 006      movi re xorshift_next
  0001000010011110  // 007      xchg re r9
  0110100011111010  // 008      sub ra rf
  0010000010101110  // 009      loadr re [ ra ]
  0011000010101110  // 00a      storer [ ra ] re
  0110011011111010  // 00b      add ra rf
  0111001001101110  // 00c      movi re io_write
  0001000010011110  // 00d      xchg re r9
  0110100011111010  // 00e      sub ra rf
  0010000010101110  // 00f      loadr re [ ra ]
  0111111111110001  // 010      movi r1 0xff
  0011000010101110  // 011      storer [ ra ] re
  0110011011111010  // 012      add ra rf
  0111001010001110  // 013      movi re sleep
  0001000010011110  // 014      xchg re r9
  0110100011111010  // 015      sub ra rf
  0010000010101110  // 016      loadr re [ ra ]
  0000000000100001  // 017      movr r1 r2
  0011000010101110  // 018      storer [ ra ] re
  0110011011111010  // 019      add ra rf
  0111001001101110  // 01a      movi re io_write
  0001000010011110  // 01b      xchg re r9
  0110100011111010  // 01c      sub ra rf
  0010000010101110  // 01d      loadr re [ ra ]
  0111111111110001  // 01e      movi r1 0xff
  0011000010101110  // 01f      storer [ ra ] re
  0110011011111010  // 020      add ra rf
  0111001010001110  // 021      movi re sleep
  0001000010011110  // 022      xchg re r9
  0110100011111010  // 023      sub ra rf
  0010000010101110  // 024      loadr re [ ra ]
  0111000001001001  // 025      movi r9 loop
  ////////////////  // 026  io_write:
  1111111111110001  // 026      storei [ 0x3ff ] r1
  0000000011101001  // 027      movr r9 re
  ////////////////  // 028  sleep:
  0111000000011011  // 028      movi rb 0x1
  0101111000000000  // 029      setcc one
  ////////////////  // 02a  sleep_loop:
  0110100010110001  // 02a      sub r1 rb
  0101100000010000  // 02b      setcc and z
  0110011110111001  // 02c      maybe add r9 rb
  0111001010101001  // 02d      movi r9 sleep_loop
  0000000011101001  // 02e      movr r9 re
  ////////////////  // 02f  xorshift_next:
  1000000100000001  // 02f      loadi r1 [ 0x10 ]
  1000000100010010  // 030      loadi r2 [ 0x11 ]
  0000000000101011  // 031      movr rb r2
  0110110011111011  // 032      srl rb 0x7
  0110010010110010  // 033      xor r2 rb
  0000000000011011  // 034      movr rb r1
  0110111000011011  // 035      sl rb 0x1
  0110010010110010  // 036      xor r2 rb
  0000000000011011  // 037      movr rb r1
  0110110011111011  // 038      srl rb 0x7
  0110010010110001  // 039      xor r1 rb
  0000000000101011  // 03a      movr rb r2
  0110111000011011  // 03b      sl rb 0x1
  0110010010110001  // 03c      xor r1 rb
  0000000000011011  // 03d      movr rb r1
  0110110011011011  // 03e      srl rb 0x5
  0110010010110010  // 03f      xor r2 rb
  1100000100000001  // 040      storei [ 0x10 ] r1
  1100000100010010  // 041      storei [ 0x11 ] r2
  0000000011101001  // 042      movr r9 re
