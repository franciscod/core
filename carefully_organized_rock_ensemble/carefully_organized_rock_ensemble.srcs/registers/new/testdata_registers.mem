/*
rst
| sel_read_a
| |    sel_read_b
| |    |    exchange_a_b
| |    |    | en_write_reg
| |    |    | | sel_write_reg
| |    |    | | |    data_write_reg
| |    |    | | |    |        en_write_flags
| |    |    | | |    |        | data_write_flags
| |    |    | | |    |        | |        en_write_ip
| |    |    | | |    |        | |        | data_write_ip
| |    |    | | |    |        | |        | |         r_read_a r_read_b r_flags  r_ip     r_cs     r_ds
| |    |    | | |    |        | |        | |         |        |        |        |        |        |
0_0000_0000_0_0_0000_00000000_0_00000000_0_00000000__00000000_00000000_00000000_00000000_00000000_00000000 */
// At the start all registers are zeroes
0_0000_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0001_0001_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0010_0010_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0011_0011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0100_0100_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0101_0101_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0110_0110_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_0111_0111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1000_1000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1001_1001_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1010_1010_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1011_1011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1100_1100_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1101_1101_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1110_1110_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000
0_1111_1111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11111111_11111111_00000000_00000000_00000000_00000000 // Except the `always FF` register
// Write to registers
0_0000_0000_0_1_0000_11111111_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R0 = 0xFF (nothing changes)
0_0000_0000_0_1_0001_00010001_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R1 = 0x11
0_0001_0001_0_1_0010_00100010_0_XXXXXXXX_0_XXXXXXXX__00010001_00010001_00000000_00000000_00000000_00000000 // R2 = 0x22
0_0010_0010_0_1_0011_00110011_0_XXXXXXXX_0_XXXXXXXX__00100010_00100010_00000000_00000000_00000000_00000000 // R3 = 0x33
0_0011_0011_0_1_0100_01000100_0_XXXXXXXX_0_XXXXXXXX__00110011_00110011_00000000_00000000_00000000_00000000 // R4 = 0x44
0_0100_0100_0_1_0101_01010101_0_XXXXXXXX_0_XXXXXXXX__01000100_01000100_00000000_00000000_00000000_00000000 // R5 = 0x55
0_0101_0101_0_1_0110_01100110_0_XXXXXXXX_0_XXXXXXXX__01010101_01010101_00000000_00000000_00000000_00000000 // R6 = 0x66
0_0110_0110_0_1_0111_01110111_0_XXXXXXXX_0_XXXXXXXX__01100110_01100110_00000000_00000000_00000000_00000000 // R7 = 0x77
0_0111_0111_0_1_1000_10001000_0_XXXXXXXX_0_XXXXXXXX__01110111_01110111_00000000_00000000_00000000_00000000 // R8 = 0x88 (flags change)
0_1000_1000_0_1_1001_10011001_0_XXXXXXXX_0_XXXXXXXX__10001000_10001000_10001000_00000000_00000000_00000000 // R9 = 0x99
0_1001_1001_0_1_1010_10101010_0_XXXXXXXX_0_XXXXXXXX__10011001_10011001_10001000_10011001_00000000_00000000 // RA = 0xAA
0_1010_1010_0_1_1011_10111011_0_XXXXXXXX_0_XXXXXXXX__10101010_10101010_10001000_10011001_00000000_00000000 // RB = 0xBB
0_1011_1011_0_1_1100_11001100_0_XXXXXXXX_0_XXXXXXXX__10111011_10111011_10001000_10011001_00000000_00000000 // RC = 0xCC (cs change)
0_1100_1100_0_1_1101_11011101_0_XXXXXXXX_0_XXXXXXXX__11001100_11001100_10001000_10011001_11001100_00000000 // RD = 0xDD (ds change)
0_1101_1101_0_1_1110_11101110_0_XXXXXXXX_0_XXXXXXXX__11011101_11011101_10001000_10011001_11001100_11011101 // RE = 0xEE
0_1110_1110_0_1_1111_00000000_0_XXXXXXXX_0_XXXXXXXX__11101110_11101110_10001000_10011001_11001100_11011101 // RF = 0x00 (nothing changes)
0_1111_1111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11111111_11111111_10001000_10011001_11001100_11011101
// Read all registers to assert changes
0_0000_0001_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00010001_10001000_10011001_11001100_11011101 // R0, R1
0_0010_0011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00100010_00110011_10001000_10011001_11001100_11011101 // R2, R3
0_0100_0101_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__01000100_01010101_10001000_10011001_11001100_11011101 // R4, R5
0_0110_0111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__01100110_01110111_10001000_10011001_11001100_11011101 // R6, R7
0_1000_1001_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__10001000_10011001_10001000_10011001_11001100_11011101 // R8, R9
0_1010_1011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__10101010_10111011_10001000_10011001_11001100_11011101 // RA, RB
0_1100_1101_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11001100_11011101_10001000_10011001_11001100_11011101 // RC, RD
1_1110_1111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11101110_11111111_10001000_10011001_11001100_11011101 // RE, RF. Reset for next test.
// Assert all zeroes after reset
0_0000_0001_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R0, R1
0_0010_0011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R2, R3
0_0100_0101_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R4, R5
0_0110_0111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R6, R7
0_1000_1001_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // R8, R9
0_1010_1011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // RA, RB
0_1100_1101_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // RC, RD
0_1110_1111_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_11111111_00000000_00000000_00000000_00000000 // RE, RF
// Register writes are reflected on the next clock
0_0001_0000_0_1_0001_00000001_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Read 0x00 from R1. Write 0x01 to R1.
0_0001_0000_0_1_0001_00000010_0_XXXXXXXX_0_XXXXXXXX__00000001_00000000_00000000_00000000_00000000_00000000 // Read 0x01 from R1. Write 0x02 to R1.
1_0001_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000010_00000000_00000000_00000000_00000000_00000000 // Read 0x02 from R1. Reset for next test.
// Flags and IP can be written directly
0_0000_0000_0_0_XXXX_XXXXXXXX_1_10101010_1_10011001__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0xAA to flags. Write 0x99 to ip.
1_0000_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_00000000__00000000_00000000_10101010_10011001_00000000_00000000 // Changes are reflected. Reset for next test.
// Writing directly to the flags only changes the whole register
0_0000_0000_0_1_1000_11111111_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0xFF to R8.
0_0000_0000_0_0_XXXX_XXXXXXXX_1_01010101_0_XXXXXXXX__00000000_00000000_11111111_00000000_00000000_00000000 // Write 0x55 to flags.
1_0000_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_01010101_00000000_00000000_00000000 // Changes are reflected. Reset for next test.
// When writing to the flags both ways the register write has precedence.
0_0000_0000_0_1_1000_11111111_1_10101010_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0xFF to R8. Write 0xAA to flags.
1_0000_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_11111111_00000000_00000000_00000000 // Changes are reflected. Reset for next test.
// When writing to the ip both ways the register write has precedence.
0_0000_0000_0_1_1001_11001100_0_XXXXXXXX_1_00110011__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0xCC to R9. Write 0x33 to ip.
1_0000_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_11001100_00000000_00000000 // Changes are reflected. Reset for next test.
// We can exchange the selected registers
0_0000_0000_0_1_0001_11001100_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0xBB to R1.
0_0000_0000_0_1_0010_00110011_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0x33 to R2.
0_0001_0010_1_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11001100_00110011_00000000_00000000_00000000_00000000 // Exchange R1 with R2.
1_0001_0010_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00110011_11001100_00000000_00000000_00000000_00000000 // Read R1. Read R2. Reset for next test.
// Write has priority over exchange. Exchange has priority over direct flags/ip write
0_0000_0000_0_1_0001_11001100_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0xBB to R1.
0_0000_0000_0_1_0010_00110011_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_00000000_00000000_00000000 // Write 0x33 to R2.
0_0001_0010_1_1_0011_11111111_0_XXXXXXXX_0_XXXXXXXX__11001100_00110011_00000000_00000000_00000000_00000000 // Exchange R1 with R2 (fails). Write 0xFF to R3
0_0001_0010_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11001100_00110011_00000000_00000000_00000000_00000000 // Read R1 (unchanged). Read R2 (unchanged).
0_0011_0011_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__11111111_11111111_00000000_00000000_00000000_00000000 // Read R3 (changed).
0_0011_1000_1_0_XXXX_XXXXXXXX_1_10101010_0_XXXXXXXX__11111111_00000000_00000000_00000000_00000000_00000000 // Exchange R3 with R8. Write 0xAA to flags (fails).
0_1000_1001_1_0_XXXX_XXXXXXXX_0_XXXXXXXX_1_10101010__11111111_00000000_11111111_00000000_00000000_00000000 // Exchange R3 with R9. Write 0xAA to ip (fails).
1_0000_0000_0_0_XXXX_XXXXXXXX_0_XXXXXXXX_0_XXXXXXXX__00000000_00000000_00000000_11111111_00000000_00000000 // Changes are reflected. Reset for next test.